# name: Build and Push Docker Image

# on:
#   push:
#     branches:
#       - main  # Adjust branch as needed

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     steps:
#       # Step 1: Check out the code
#       - name: Checkout code
#         uses: actions/checkout@v4

#       # Step 2: Get a short SHA for the commit
#       - name: Get short SHA
#         uses: benjlevesque/short-sha@v3.0
#         id: short-sha

#       # Step 3: Log in to Docker Hub
#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ vars.DOCKERHUB_NAME }}
#           password: ${{ secrets.DOCKERHUB_PASS }}

#       # Step 4: Build and push Docker image
#       - name: Build and Push Docker Image
#         run: |
#           docker build -t ${{ vars.DOCKERHUB_IMAGE_NAME }}/${{ vars.DOCKERHUB_IMG_PREFIX }}-users-api:${{ steps.short-sha.outputs.sha }} .
#           docker tag ${{ vars.DOCKERHUB_IMAGE_NAME }}/${{ vars.DOCKERHUB_IMG_PREFIX }}-users-api:${{ steps.short-sha.outputs.sha }} ${{ vars.DOCKERHUB_IMAGE_NAME }}/${{ vars.DOCKERHUB_IMG_PREFIX }}-users-api:latest
#           docker push ${{ vars.DOCKERHUB_IMAGE_NAME }}/${{ vars.DOCKERHUB_IMG_PREFIX }}-users-api:${{ steps.short-sha.outputs.sha }}
#           docker push ${{ vars.DOCKERHUB_IMAGE_NAME }}/${{ vars.DOCKERHUB_IMG_PREFIX }}-users-api:latest
name: Build, Scan and Push Docker Image

on:
  push:
    branches:
      - main  # Adjust branch as needed

jobs:
  build-scan-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Get a short SHA for the commit
      - name: Get short SHA
        uses: benjlevesque/short-sha@v3.0
        id: short-sha

      # Step 3: Build Docker image
      - name: Build Docker Image
        run: |
          docker build -t ${{ vars.DOCKERHUB_IMAGE_NAME }}/${{ vars.DOCKERHUB_IMG_PREFIX }}-users-api:${{ steps.short-sha.outputs.sha }} .
          docker tag ${{ vars.DOCKERHUB_IMAGE_NAME }}/${{ vars.DOCKERHUB_IMG_PREFIX }}-users-api:${{ steps.short-sha.outputs.sha }} ${{ vars.DOCKERHUB_IMAGE_NAME }}/${{ vars.DOCKERHUB_IMG_PREFIX }}-users-api:latest

      # Step 4: Run the container for testing
      - name: Run Docker container
        run: |
          docker run -d -p 8080:8080 ${{ vars.DOCKERHUB_IMAGE_NAME }}/${{ vars.DOCKERHUB_IMG_PREFIX }}-users-api:${{ steps.short-sha.outputs.sha }}
          sleep 30  # Wait for the application to start

      # Step 5: ZAP Scan
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.9.0
        with:
          target: 'http://localhost:8000/users'  # Adjust the port according to your application
          allow_issue_writing: false
          fail_action: true  # Will fail the build if any alerts are found
          cmd_options: '-a'  # Additional ZAP options if needed

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_NAME }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      # Step 7: Push Docker image
      - name: Push Docker Image
        run: |
          docker push ${{ vars.DOCKERHUB_IMAGE_NAME }}/${{ vars.DOCKERHUB_IMG_PREFIX }}-users-api:${{ steps.short-sha.outputs.sha }}
          docker push ${{ vars.DOCKERHUB_IMAGE_NAME }}/${{ vars.DOCKERHUB_IMG_PREFIX }}-users-api:latest